# Generated by Django 5.2.4 on 2025-07-24 18:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('destinations', '0001_initial'),
        ('guides', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TravelInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(help_text='Comma-separated keywords for AI matching', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('budget_range', models.CharField(choices=[('budget', 'Budget (< 500K IDR/day)'), ('mid-range', 'Mid-range (500K - 1.5M IDR/day)'), ('luxury', 'Luxury (> 1.5M IDR/day)')], max_length=20)),
                ('duration_days', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('ai_prompt_used', models.TextField(help_text='The prompt sent to AI for generation')),
                ('ai_response_raw', models.JSONField(default=dict, help_text='Raw AI response')),
                ('estimated_total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('estimated_daily_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_favorite', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraries', to='destinations.city')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraries', to=settings.AUTH_USER_MODEL)),
                ('interests', models.ManyToManyField(related_name='itineraries', to='itinerary.travelinterest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ItineraryDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(help_text="e.g., 'Day 1: Cultural Exploration'", max_length=200)),
                ('description', models.TextField(blank=True)),
                ('estimated_daily_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('itinerary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='itinerary.itinerary')),
            ],
            options={
                'ordering': ['day_number'],
                'unique_together': {('itinerary', 'day_number')},
            },
        ),
        migrations.CreateModel(
            name='ItineraryActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('destination', 'Visit Destination'), ('meal', 'Meal/Restaurant'), ('transport', 'Transportation'), ('rest', 'Rest/Break'), ('shopping', 'Shopping'), ('other', 'Other Activity')], default='destination', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.IntegerField()),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('custom_location', models.CharField(blank=True, max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('order', models.IntegerField(default=0)),
                ('ai_notes', models.TextField(blank=True, help_text='AI-generated tips for this activity')),
                ('user_notes', models.TextField(blank=True, help_text="User's personal notes")),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='destinations.destination')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='itinerary.itineraryday')),
            ],
            options={
                'ordering': ['order', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ItineraryGuideRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_personality_traits', models.CharField(blank=True, max_length=200)),
                ('preferred_languages', models.CharField(blank=True, max_length=100)),
                ('max_budget_per_day', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('matched', 'Matched'), ('booked', 'Booked'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('ai_matching_scores', models.JSONField(default=dict, help_text='Guide ID -> matching score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('itinerary', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guide_request', to='itinerary.itinerary')),
                ('matched_guides', models.ManyToManyField(blank=True, related_name='potential_matches', to='guides.tourguide')),
                ('preferred_guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='guides.tourguide')),
            ],
        ),
        migrations.CreateModel(
            name='SavedItinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('itinerary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='itinerary.itinerary')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_itineraries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'itinerary')},
            },
        ),
    ]
